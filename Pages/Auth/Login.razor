@page "/login"
@inject AuthenticationStateProvider AuthStateProvider;
@inject NavigationManager NavigationManager
@inject AuthService AuthService
@attribute [AllowAnonymous]
@using Blazorise;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@using TennisRD.Domain
@using TennisRD.Services

<Container Flex="Flex.AlignItems.Center" >
    <Column Margin="Margin.IsAuto" ColumnSize="ColumnSize.Is4.OnDesktop.Is8.OnTablet.Is12.OnMobile">
        <Form @onsubmit="DoLogin" >
        <Card Border="Blazorise.Border.Rounded.Is2.Primary" Margin="Margin.Is5.FromTop" Shadow="Shadow.Large">
            <CardHeader>
                <CardTitle >
                    <Heading TextAlignment="TextAlignment.Center" Size="HeadingSize.Is4">
                        <Icon Name="Blazorise.IconName.UserCircle" TextAlignment="TextAlignment.Center" TextColor="TextColor.Primary" IconSize="Blazorise.IconSize.x2"/>
                        <br/>
                        User Login
                    </Heading>
                </CardTitle>
            </CardHeader>
            <CardBody>
                <Validations @ref="_loginValidator" Mode="ValidationMode.Manual" Model="_loginModel">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <Field>
                            <FieldLabel TextColor="TextColor.Black50">User Id</FieldLabel>
                            <TextEdit @bind-Text="_loginModel.Email" Placeholder="Enter your user id">
                                <Feedback>
                                    <ValidationError>You must specify a user id.</ValidationError>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <br/>
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <Field>
                            <FieldLabel TextColor="TextColor.Black50">Password</FieldLabel>
                            <TextEdit @bind-Text="_loginModel.Password" Role="TextRole.Password" Placeholder="Enter you password">
                                <Feedback>
                                    <ValidationError>You must specify a password.</ValidationError>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <br/>
                </Validations>
            </CardBody>
            <CardFooter>
                <Container Flex="Flex.AlignContent.Center">
                    <Button @bind-Loading="_isBusy" Type="ButtonType.Submit" TextAlignment="TextAlignment.Center" VerticalAlignment="Blazorise.VerticalAlignment.Middle" Margin="Margin.Is3.OnY.IsAuto.OnX" Color="Color.Primary">
                        <LoadingTemplate>
                            <Container Flex="Flex.AlignContent.Center">
                                <SfSpinner />
                                @*<SpinKit Type="SpinKitType.Circle" Size="20px" Color="#ffffff"/>*@
                            </Container>
                        </LoadingTemplate>
                        <ChildContent>
                            Login
                        </ChildContent>
                    </Button>
                </Container>
            </CardFooter>
        </Card>
        </Form>
    </Column>
</Container>
@code {

    bool _isBusy = false;
    
    [Inject] Blazorise.IMessageService MessageService { get; set; }
    Validations _loginValidator;
    LoginModel _loginModel = new LoginModel();

    private async Task DoLogin()
    {
        if(_isBusy) return;
        try
        {
            _isBusy = true;
            if(await _loginValidator.ValidateAll())
            {
                await _loginValidator.ClearAll();
                await AuthService.Login(_loginModel.Email, _loginModel.Password);
                NavigationManager.NavigateTo($"/");
            }
        } catch
        {
            await MessageService.Warning("Invalid user of password, please verify and try again. ", "Alert");
        }
        finally
        {
            _isBusy = false;
        }
    }

}